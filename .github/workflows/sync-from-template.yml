name: Sync changes from template

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths:
      - .github/workflows/sync-from-template.yml
  workflow_dispatch:

env:
  BASE_BRANCH: master
  HEAD_BRANCH: chore/sync-from-template
  GIT_AUTHOR_NAME: ${{ github.repository_owner }}
  GIT_AUTHOR_EMAIL: ${{ github.repository_owner }}@users.noreply.github.com
  REPO_TEMPLATE: Witteborn/GitHubBoilerplate
  THIS_REPO: ${{ github.repository }}

jobs:
  sync-from-template:
    if: github.repository != 'Witteborn/GitHubBoilerplate'
    name: Sync changes from Witteborn/GitHubBoilerplate
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      # Check out the template repository
      - name: Check out template repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO_TEMPLATE }}
          token: ${{ secrets.SYNC_TOKEN }}
          path: ${{ env.REPO_TEMPLATE }}

      # Check out the target repository
      - name: Check out target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.SYNC_TOKEN }}
          path: ${{ env.THIS_REPO }}

      # Create or switch to the sync branch
      - name: Create branch in ${{ env.THIS_REPO }}
        run: |
          git -C "${THIS_REPO}" fetch origin "${HEAD_BRANCH}" || true
          git -C "${THIS_REPO}" branch -a
          git -C "${THIS_REPO}" checkout -B "${HEAD_BRANCH}" \
            "remotes/origin/${HEAD_BRANCH}" || \
          git -C "${THIS_REPO}" checkout -b "${HEAD_BRANCH}"

      # Copy template contents
      - name: Copy template contents
        run: |
          _files="$(find ${REPO_TEMPLATE} \
            ! -path "*/.git/*" \
            ! -name ".gitignore" \
            ! -name "README.md" \
            -type f \
            -print)"
          for _file in ${_files}; do
            _src="${_file}"
            _dst="${THIS_REPO}/${_file#${REPO_TEMPLATE}/}"
            _dst="${_dst%/*}/"
            mkdir -p "${_dst}"
            echo "INFO: Copy '${_src}' to '${_dst}'."
            cp "${_src}" "${_dst}"
          done
          git -C "${THIS_REPO}" diff

      # Commit changes, if any
      - name: Commit changes, if any
        run: |
          git -C ${THIS_REPO} config user.name "${GIT_AUTHOR_NAME}"
          git -C ${THIS_REPO} config user.email "${GIT_AUTHOR_EMAIL}"
          git -C ${THIS_REPO} add .
          git -C ${THIS_REPO} commit \
            -m "Sync from template@${{ github.sha }}" || echo "No changes to commit."

      # Push the branch to the target repository
      - name: Push topic branch
        run: git -C ${THIS_REPO} push -u origin "${HEAD_BRANCH}"

      # Create a pull request in the target repository
      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.SYNC_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
        run: |
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GIT_AUTHOR_EMAIL}"
          gh auth login --with-token <<< "${GITHUB_TOKEN}"
          gh pr create \
            --base "${BASE_BRANCH}" \
            --head "${HEAD_BRANCH}" \
            --title "Pull updates from ${REPO_TEMPLATE}" \
            --body "Pull updates from ${REPO_TEMPLATE}"
